<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.moaplace.mapper.BookingMapper">
	
	<!-- member_num으로 회원의 예매내역 존재여부 + 내역 개수 확인 -->
	<select id="bookingExist" resultType="int" parameterType="int">
		select NVL(count(*),0) cnt from booking
		where member_num = #{member_num}
	</select>
	
	<!-- member_num으로 회원의 가장 최근 예매내역 1건 조회 -->
	<select id="recentBooking" resultType="com.moaplace.dto.MyBookingDTO" parameterType="int">
		select * from (
		    select b.booking_num,b.regdate,sh.show_thumbnail,sh.show_name,h.hall_name,
		    sc.schedule_date,sc.schedule_time,b.booking_seat,b.booking_price,p.payment_status,sh.show_num
		    from booking b
		    join payment p on (b.booking_num = p.booking_num)
		    join schedule sc on (b.schedule_num = sc.schedule_num)
		    join show sh on (sc.show_num = sh.show_num)
		    join hall h on (sh.hall_num = h.hall_num)
		    where b.member_num = #{member_num}
		    order by b.booking_num desc
		) where rownum = 1
	</select>
	
	<!-- member_num + startdate + enddate + startrow + endrow 받아서 기간설정 + 페이징 조회 -->
	<select id="list" resultType="com.moaplace.dto.MyBookingDTO" parameterType="hashmap">
		select * from (
		    select r.*,rownum rnum from (
		        select b.booking_num,b.regdate,sh.show_thumbnail,sh.show_name,h.hall_name,
		        sc.schedule_date,sc.schedule_time,b.booking_seat,b.booking_price,p.payment_status,sh.show_num
		        from booking b
		        join payment p on (b.booking_num = p.booking_num)
		        join schedule sc on (b.schedule_num = sc.schedule_num)
		        join show sh on (sc.show_num = sh.show_num)
		        join hall h on (sh.hall_num = h.hall_num)
		        where b.member_num = #{member_num}
		        and b.regdate between #{startdate} and #{enddate}
		        order by b.booking_num desc
		    )r
		)where rnum between #{startRow} and #{endRow}
	</select>
	
	<!-- 기간설정  + 페이징 조회된 내역 개수 -->
	<select id="listCount" resultType="int" parameterType="hashmap">
		select NVL(count(*),0) cnt from (
		    select r.*,rownum rnum from (
		        select b.booking_num,b.regdate,sh.show_thumbnail,sh.show_name,h.hall_name,
		        sc.schedule_date,sc.schedule_time,b.booking_seat,b.booking_price,p.payment_status,sh.show_num
		        from booking b
		        join payment p on (b.booking_num = p.booking_num)
		        join schedule sc on (b.schedule_num = sc.schedule_num)
		        join show sh on (sc.show_num = sh.show_num)
		        join hall h on (sh.hall_num = h.hall_num)
		        where b.member_num = #{member_num}
		        and b.regdate between #{startdate} and #{enddate}
		        order by b.booking_num desc
		    )r
		)
	</select>
	
	<!-- booking_num으로 예매상세내역 조회 -->
	<select id="detail" resultType="com.moaplace.dto.MyBookingDetailDTO" parameterType="int">
		select b.member_num,b.booking_num,b.regdate,sh.show_name,sc.schedule_date,sc.schedule_time,
		b.booking_seat,h.hall_name,p.payment_date,b.booking_price,b.use_point,
		p.payment_method,p.payment_status,sh.show_num,p.imp_uid
		from booking b
		join payment p on (b.booking_num = p.booking_num)
		join schedule sc on (b.schedule_num = sc.schedule_num)
		join show sh on (sc.show_num = sh.show_num)
		join hall h on (sh.hall_num = h.hall_num)
		where b.booking_num = #{booking_num}
	</select>
	
	<!-- booking_num으로 공연일 조회(예매취소여부 조회용) -->
	<select id="getScheduleDate" resultType="String" parameterType="int">
		select sc.schedule_date from booking b
		join schedule sc on (b.schedule_num = sc.schedule_num)
		where booking_num = #{booking_num}
	</select>
	
	<select id="bookingChart" resultType="com.moaplace.dto.AdminChartDTO">
	<![CDATA[
		SELECT TO_CHAR(regdate, 'YYYY-MM') as day, sum(booking_price) as price FROM (
		    SELECT b.booking_price, b.regdate
		    FROM booking b JOIN payment p
		    ON b.booking_num = p.booking_num
		    WHERE p.payment_status = '결제완료' )
		WHERE regdate >= #{startDate} AND regdate <= #{endDate}
		GROUP BY TO_CHAR(regdate, 'YYYY-MM')
    ORDER BY TO_CHAR(regdate, 'YYYY-MM')
	]]>
	</select>

	<!-- booking_num으로 member_num 조회 -->
	<select id="cancleInfoCheck" resultType="int" parameterType="int">
		select member_num from booking where booking_num = #{booking_num}
	</select>
	
	<!-- booking insert(예매페이지) -->
	<insert id="payInfoInsert" >
			<selectKey keyProperty="booking_num" order="BEFORE"
			resultType="int">
			select booking_seq.nextval from dual
		</selectKey>
	   INSERT INTO booking VALUES(#{booking_num}, #{member_num}, #{schedule_num},
	     #{booking_count}, #{booking_price}, #{booking_seat}, #{use_point} , sysdate)
	</insert>


	<!-- 연희 시작 -->
	
	<!-- 관리자 예매리스트 조회 -->
	<select id="adminBookingList" resultType="com.moaplace.dto.AdminBookingListDTO" parameterType="hashmap">
	
		SELECT * FROM       
		    (SELECT a.*, ROWNUM rn 
		    FROM (
		        SELECT 
		            b.booking_num bookingNum, member_id memberId, sh.show_name showName, 
		            sc.schedule_date scheduleDate, sc.schedule_time scheduleTime, 
	                b.booking_price bookingPrice, TO_CHAR(b.regdate, 'YYYY-MM-DD') bookingDate, p.payment_status status
		        FROM booking b
		        INNER JOIN payment p ON (b.booking_num = p.booking_num)
		        INNER JOIN member m ON b.member_num = m.member_num
		        INNER JOIN schedule sc ON (b.schedule_num = sc.schedule_num)
		        INNER JOIN show sh ON (sc.show_num = sh.show_num)
		       	<where>
		       		<if test="status =='전체'">
		       			<if test="search != NULL">
		       				${field} LIKE '%'||#{search}||'%'
		       			</if>
		       		</if>
		       		<if test="status != '전체'">
		       			p.payment_status = #{status}
		       			<if test="search != NULL">
		       				AND ${field} LIKE '%'||#{search}||'%'
		       			</if>
		       		</if>
		       	</where>
		    	)a
		   	) 
		WHERE rn BETWEEN #{startRow} AND #{endRow}
	
	</select>
	
	
	<!-- 관리자 예매리스트 총 행 수 구하기(검색,모아보기 전) -->
	<select id="adminAllBookingCnt" resultType="int">
	
		SELECT NVL(COUNT(*),0) FROM booking	    
	
	</select>
	
	
	<!-- 관리자 예매리스트 검색, 모아보기 후 행 수 구하기 -->
	<select id="currentAdminBookingCnt" resultType="int" parameterType="hashmap">
	
	   SELECT 
	        NVL(COUNT(*),0)
	   FROM booking b
	   INNER JOIN payment p ON b.booking_num = p.booking_num
	   INNER JOIN member m ON b.member_num = m.member_num
	   INNER JOIN schedule sc ON b.schedule_num = sc.schedule_num
	   INNER JOIN show sh ON sc.show_num = sh.show_num
	  	<where>
	  		<if test="status =='전체'">
	  			<if test="search != NULL">
	  				${field} LIKE '%'||#{search}||'%'
	  			</if>
	  		</if>
	  		<if test="status != '전체'">
	  			p.payment_status = #{status}
	  			<if test="search != NULL">
	  				AND ${field} LIKE '%'||#{search}||'%'
	  			</if>
	  		</if>
	  	</where>
	</select>
	
	
	<!-- 관리자 예매 상세조회 -->
	<select id="selectAdminBookingDetail" parameterType="int" resultType="com.moaplace.dto.AdminBookingDetailDTO">
	
		SELECT 
		    s.schedule_date scheduleDate, s.schedule_time scheduleTime, 
		    booking_count bookingCount, booking_seat bookingSeat,
		    ticket_rating ticketAge, ticket_grade ticketGrade, ticket_count,
		    TO_CHAR(payment_date, 'YYYY-MM-DD') paymentDate,
		    p.booking_price ticketPrice, use_point usePoint, 
		    payment_method paymentMethod, b.booking_price bookingPrice, payment_status paymentStatus,
		    merchant_uid merchantUid, imp_uid impUid
		FROM booking b 
		INNER JOIN schedule s
		ON b.schedule_num = s.schedule_num 
		INNER JOIN payment p
		ON b.booking_num = p.booking_num 
		INNER JOIN (
		    SELECT 
		        booking_num, ticket_rating, ticket_grade, ticket_count
		    FROM ticket ) t
		ON b.booking_num = t.booking_num 
		where b.booking_num = #{bookingNum}
	
	</select>
	
	<!-- 연희 끝 -->

</mapper>
